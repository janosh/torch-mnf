[build-system]
requires = ["setuptools>=61.2"]
build-backend = "setuptools.build_meta"

[project]
name = "torch-mnf"
version = "0.2.0"
description = "PyTorch implementation of Multiplicative Normalizing Flows"
authors = [{ name = "Janosh Riebesell", email = "janosh.riebesell@gmail.com" }]
readme = "readme.md"
license = { file = "license" }
keywords = [
    "science",
    "materials informatics",
    "materials discovery",
    "chemistry",
    "data visualization",
    "plotly",
    "matplotlib",
]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "License :: OSI Approved :: MIT License",
]
urls = { Homepage = "https://github.com/janosh/torch-mnf" }
requires-python = ">=3.8"
dependencies = [
    "matplotlib",
    "numpy",
    "pandas",
    "scikit-learn",
    "scipy",
    "seaborn",
    "torch",
    "torchvision",
]

[project.optional-dependencies]
test = ["pytest", "pytest-cov"]

[tool.setuptools.packages]
find = { include = ["torch_mnf"] }

[tool.setuptools.package-data]
torch_mnf = ["*.csv"]

[tool.distutils.bdist_wheel]
universal = true

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-p no:warnings"

[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
show_error_codes = true
no_implicit_optional = false

[tool.codespell]
ignore-words-list = "hist"

[tool.ruff]
target-version = "py38"
select = [
    "B",   # flake8-bugbear
    "D",   # pydocstyle
    "E",   # pycodestyle
    "F",   # pyflakes
    "I",   # isort
    "PLE", # pylint error
    "PLW", # pylint warning
    "PYI", # flakes8-pyi
    "Q",   # flake8-quotes
    "SIM", # flake8-simplify
    "TID", # tidy imports
    "UP",  # pyupgrade
    "W",   # pycodestyle
    "YTT", # flake8-2020
]
ignore = [
    "D100",   # Missing docstring in public module
    "D104",   # Missing docstring in public package
    "D205",   # 1 blank line required between summary line and description
    "SIM105", # Use contextlib.suppress(FileNotFoundError) instead of try-except-pass
    "SIM115", # Use context handler for opening files
    "E731",   # Do not assign a lambda expression, use a def
]
pydocstyle.convention = "google"
isort.lines-after-imports = 2

[tool.ruff.per-file-ignores]
"tests/*" = ["D103"]
"__init__.py" = ["F401"]
"examples/*" = ["D"]
